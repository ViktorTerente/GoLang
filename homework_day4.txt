/*
Сформировать данные для отправки заказа из
магазина по накладной и вывести на экран:
1) Наименование товара (минимум 1, максимум 100)
2) Количество (только числа)
3) ФИО покупателя (только буквы)
4) Контактный телефон (10 цифр)
5) Адрес(индекс(ровно 6 цифр), город, улица, дом, квартира)

Эти данные не могут быть пустыми.
Проверить правильность заполнения полей.

реализовать несколько методов у типа "Накладная"

createReader == NewReader
*/

package main

import (
	"bufio"
	"fmt"
	"log"
	"os"
	"strconv"
	"strings"
)

func readAnswer() string {
	line, err := bufio.NewReader(os.Stdin).ReadString('\n')
	if err != nil {
		log.Fatal(err)
	}
	data := strings.TrimSpace(line)
	return data
}

func (o *order) requestStr() (str string) {
	str = readAnswer()
	return
}

func (o order) requestIntAndStr() (i int, str string, err error) {
	str = readAnswer()
	i, err = strconv.Atoi(str)
	return
}

func (o order) askInt() (i int, err error) {
	str := readAnswer()
	i, err = strconv.Atoi(str)
	return i, err
}

type order struct {
	product
	customer
}

type product struct {
	name    string
	prodCnt int
}

type customer struct {
	clientName  string
	phoneNumber int
	address
}

type address struct {
	postalCode int
	city       string
	street     string
	house      string
	apartment  string
}

func main() {
	var order order
	var isPostalCode, isAddress, isPhone, isOrderCnt bool

	fmt.Println("Введите индекс - 6 цифр")
	for i := 0; i < 5; i++ {
		PostalCodeInt, PostalCode, err := order.requestIntAndStr()
		if len(PostalCode) != 6 && err == nil {
			fmt.Println("Длина индекса должна быть равна 6 симловам")
		} else if len(PostalCode) == 6 && err != nil {
			fmt.Println("Необходимо использовать только цифры")
		} else if len(PostalCode) != 6 || err != nil {
			fmt.Println("Введите корректный индекс")
		} else if len(PostalCode) == 6 && err == nil {
			isPostalCode = true
			order.postalCode = PostalCodeInt
		}
		if isPostalCode {
			break
		}
	}

	if !isPostalCode {

		fmt.Println("Указан не корректный индекс, попробуйте оформить заказ позже")
		log.Fatal("ошибка при вводе индекса")
	}

	fmt.Println("Введите адрес в формате: Город, Улица, Дом, Квартира. Пример: Москва, Пушкина, 33, 1")
	for i := 0; i < 5; i++ {
		address := strings.Split(order.requestStr(), ", ")

		if len(address) != 4 {
			fmt.Println("Введите корректный формат адреса")
		} else {
			isAddress = true
			order.city = address[0]
			order.street = address[1]
			order.house = address[2]
			order.apartment = address[3]
		}

		if isAddress {
			break
		}
	}

	if !isAddress {

		fmt.Println("Указан не корректный адрес, попробуйте оформить заказ позже")
		log.Fatal("ошибка при вводе адреса")
	}

	fmt.Println("Введите ФИО")

	order.clientName = order.requestStr()

	if len(order.clientName) == 0 {
		fmt.Println("ФИО не может быть пустым!")
		log.Fatal("ошибка при вводе ФИО")
	}

	fmt.Println("Укажите номер телефона в формате 8999999999.")
	for i := 0; i < 5; i++ {
		phoneInt, phone, err := order.requestIntAndStr()

		if len(phone) != 11 && err == nil {
			fmt.Println("Длина телефона составляет менее 11 символов")
		} else if len(phone) == 11 && err != nil {
			fmt.Println("Пожалуйста, используйте цифры")
		} else if len(phone) != 11 || err != nil {
			fmt.Println("Укажите корректный номер телефона")
		} else if len(phone) == 11 && err == nil {
			isPhone = true
			order.phoneNumber = phoneInt
		}
		if isPhone {
			break
		}
	}

	fmt.Println("Введите название товара")
	order.name = order.requestStr()

	if len(order.name) == 0 {
		fmt.Println("Наименование тована не может быть пустым")
		log.Fatal("ошибка при вводе ID товара")
	}

	fmt.Println("Введите количество товара")
	for i := 0; i < 5; i++ {
		numberInt, err := order.askInt()
		if numberInt == 0 && err == nil {
			fmt.Println("Количество товара должно быть больше 0")
		} else if err != nil {
			fmt.Println("Введите количество товара в цифрах")
		} else if numberInt != 0 && err == nil {
			isOrderCnt = true
			order.prodCnt = numberInt
		}
		if isOrderCnt {
			break
		}
	}

	if !isOrderCnt {

		fmt.Println("Указано не корректное количество товара, попробуйте оформить заказ позже")
		log.Fatal("ошибка при вводе кол-ва товара")
	}
	fmt.Printf("Заказ оформлен, %v\nID товара %v количество товара: %v\nДоставка по адресу: \nИндекс: %v, город %v, улица %v, дом №%v, квартира №%v \nНомер телефона: %v",
		order.clientName, order.prodCnt, order.name, order.postalCode, order.city, order.street, order.house, order.apartment, order.phoneNumber)
}
