package main

import (
	"bufio"
	"fmt"
	"os"
	"strings"
)

/*
Задача №1
Написать функцию, которая расшифрует строку.
code = "220411112603141304"
Каждые две цифры - это либо буква латинского алфавита в нижнем регистре либо пробел.
Отчет с 00 -> 'a' и до 25 -> 'z', 26 -> ' '(пробел).
Вход: строка из цифр. Выход: Текст.
Проверка работы функции выполняется через вторую строку.

codeToString(code) -> "???????'
*/
func codeToString(key string) (string, error) {

	if len(key)%2 != 0 {
		err := "Введено не корректное слово"
		return "", fmt.Errorf(err)
	}

	var word string
	pass := map[string]string{"26": " "}
	char := 'a'

	// заполняем дешефратор
	for i := 0; i < 26; i++ {
		pass[string(fmt.Sprintf("%02.f", float64(i)))] = string(char)
		char = rune(int(char) + 1)
	}

	// расшифруем слово
	for i := 1; i < len(key); i += 2 {
		char := fmt.Sprintf("%s%s", string(key[i-1]), string(key[i]))
		word += pass[char]
	}

	return word, nil
}

/*
Задача №2
Вход:
Пользователь должен ввести правильный пароль, состоящий из:
цифр,
букв латинского алфавита(строчные и прописные) и
специальных символов  special = "_!@#$%^&"

Всего 4 набора различных символов.
В пароле обязательно должен быть хотя бы один символ из каждого набора.
Длина пароля от 8(мин) до 15(макс) символов.
Максимальное количество попыток ввода неправильного пароля - 5.
Каждый раз выводим номер попытки.
*Желательно выводить пояснение, почему пароль не принят и что нужно исправить.

digits = "0123456789"
lowercase = "abcdefghiklmnopqrstvxyz"
uppercase = "ABCDEFGHIKLMNOPQRSTVXYZ"
special = "_!@#$%^&"

Выход:
Написать, что ввели правильный пароль.

Пример:
хороший пароль -> o58anuahaunH!
хороший пароль -> aaaAAA111!!!
плохой пароль -> saucacAusacu8
*/

func checkPasswd() (bool, error) {

	const (
		digits    = "0123456789"
		lowercase = "abcdefghiklmnopqrstvxyz"
		uppercase = "ABCDEFGHIKLMNOPQRSTVXYZ"
		special   = "_!@#$%^&"
	)

	var (
		pass         string
		passLen      int
		hasDigit     bool
		hasLowerCase bool
		hasUpperCase bool
		hasSpecial   bool
		passIsValid  bool
	)
	for i := 1; i < 6; i++ {

		fmt.Println("Введите пароль")

		reader := bufio.NewReader(os.Stdin)
		pass, _ = reader.ReadString('\n')
		pass = strings.TrimSpace(pass)
		passLen = len(pass)

		if passLen < 8 || passLen > 15 {
			fmt.Printf("Попытка № %d \n%s ", i, "Длина пароля должна быть от 8 до 15 символов\n")
			continue
		}

		for _, char := range pass {

			if hasDigit == false {
				hasDigit = strings.Contains(digits, string(char))
			}

			if hasLowerCase == false {
				hasLowerCase = strings.Contains(lowercase, string(char))
			}

			if hasUpperCase == false {
				hasUpperCase = strings.Contains(uppercase, string(char))
			}
			if hasSpecial == false {
				hasSpecial = strings.Contains(special, string(char))
			}
		}

		if !hasDigit || !hasLowerCase || !hasUpperCase || !hasSpecial {

			fmt.Printf("Попытка № %d.  %s\n", i, "Invalid password")
			continue

		} else {
			fmt.Println("GJ")
			passIsValid = true
			break
		}

	}

	return passIsValid, nil
}

func main() {

	/*agr := os.Args

	if len(agr) == 1 {
		fmt.Println("Введите слово")
		return
	}*/

	//-----------задача 1--------------------------
	fmt.Println("Введите код")
	var key string
	fmt.Scanf("%s", &key)

	value, err := codeToString(key) //well done

	if err != nil {
		fmt.Printf(err.Error())
	}

	fmt.Println(value)
	//--------- --Задача 1-------------------------

	//-----------задача 2
	//checkPasswd()
	//-------  --Задача 2

}
