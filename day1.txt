package main

import (
	"encoding/json"
	"fmt"
	"log"
	"math/rand"
	"net/http"
)

type Response struct {
	Result string `json:"result"`
}

var port = "1234"

func main() {

	http.HandleFunc("/info", infoHandler)
	http.HandleFunc("/first", firstHandler)
	http.HandleFunc("/second", secondHandler)
	http.HandleFunc("/add", addHandler)
	http.HandleFunc("/sub", subHandler)
	http.HandleFunc("/mul", mulHandler)
	http.HandleFunc("/div", divHandler)

	log.Println("Start server")
	log.Fatal(http.ListenAndServe(":"+port, nil))
}

// info
func infoHandler(w http.ResponseWriter, r *http.Request) {
	response := Response{
		Result: "Калькулятор API",
	}
	json.NewEncoder(w).Encode(response)
}

// Генерация случайного числа
func generateRandomNumber() int {
	return rand.Intn(100)
}

// first
func firstHandler(w http.ResponseWriter, r *http.Request) {
	number := generateRandomNumber()
	response := Response{
		Result: fmt.Sprintf("%d", number),
	}
	json.NewEncoder(w).Encode(response)
}

// second
func secondHandler(w http.ResponseWriter, r *http.Request) {
	number := generateRandomNumber()
	response := Response{
		Result: fmt.Sprintf("%d", number),
	}
	json.NewEncoder(w).Encode(response)
}

// 2 случайных числа
func getTwoRandomNumbers() (int, int) {
	return generateRandomNumber(), generateRandomNumber()
}

// add
func addHandler(w http.ResponseWriter, r *http.Request) {
	num1, num2 := getTwoRandomNumbers()
	result := num1 + num2
	response := Response{
		Result: fmt.Sprintf("%d", result),
	}
	json.NewEncoder(w).Encode(response)
}

// sub
func subHandler(w http.ResponseWriter, r *http.Request) {
	num1, num2 := getTwoRandomNumbers()
	result := num1 - num2
	response := Response{
		Result: fmt.Sprintf("%d", result),
	}
	json.NewEncoder(w).Encode(response)
}

// mul
func mulHandler(w http.ResponseWriter, r *http.Request) {
	num1, num2 := getTwoRandomNumbers()
	result := num1 * num2
	response := Response{
		Result: fmt.Sprintf("%d", result),
	}
	json.NewEncoder(w).Encode(response)
}

// div
func divHandler(w http.ResponseWriter, r *http.Request) {
	num1, num2 := getTwoRandomNumbers()
	result := float64(num1) / float64(num2)
	response := Response{
		Result: fmt.Sprintf("%.2f", result),
	}
	json.NewEncoder(w).Encode(response)
}
